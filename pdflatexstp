#!/usr/bin/env sh
# Compile and show its PDF of a TeX file, then compile it every time it is accessed/modified/etc.
# Compilation on access is wanted behaviour.
# This was written as a more robust alternative to latexmk as it seemed to fail and/or get stuck quite a lot.

clean() {
    rm "$fl.aux" "$fl.bbl" "$fl.blg" "$fl.lof" "$fl.log" "$fl.lot" "$fl.out" "$fl.pdf" "$fl.toc"
}

compile() {
    # Adapted from https://tex.stackexchange.com/a/8792/199300
    pdflatex -draftmode -shell-escape -halt-on-error "$fl" || {
        clean
        pdflatex -draftmode -shell-escape -halt-on-error "$fl"
    }
    bibtex "$fl"
    biber "$fl"
    makeindex "$fl".idx
    # makeindex -s style.gls ...
    pdflatex -draftmode -shell-escape -halt-on-error "$fl"
    pdflatex -shell-escape -halt-on-error "$fl"
}

if [ "$1" = "" ]
then
    fl="main"
    echo "No file name given, assuming main."
else
    fl="$( echo "$1" | sed 's/\.tex$//' )"
fi

[ -f "$fl.tex" ] || {
    echo "No such file exists."
    exit
}

clean
compile

pss="$( ps aux )"
[ "$( echo "$pss" | grep "zathura $fl.pdf" | grep -v "grep.*zathura $fl.pdf" )" = "" ] && zathura "$fl.pdf" &
# [ "$( echo "$pss" | grep "pdflatexstp $@" | grep -v "grep.*pdflatexstp $@" )" = "" ] && exit

while true
do
    inotifywait "$fl.tex"

    while [ ! -f "$fl.tex" ]; do sleep 0.1s; done

    # clean # not to allow permanent halting of compilation in the case of corrupted files
    compile

    while [ ! -f "$fl.tex" ]; do sleep 0.1s; done
done
