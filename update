#!/usr/bin/env sh
# Pull updates from git and compile programs. Used list file is the file coded upabl.

cleanexit() {
    rm "$lckfl"
    exit 0
}

log() {
    printf "[update]: %s\n" "$1"
}

lckfl="$( getfl upabllck )"

for i
do
    if [ "$i" = "-u" ] || [ "$i" = "--unlock" ]
    then
        [ -f "$lckfl" ] && rm -f "$lckfl" && exit 0
    fi
done

[ -f "$lckfl" ] && {
    log "Lock file is present, waiting..."

    while [ -f "$lckfl" ]
    do
        sleep 1s
    done
}

trap cleanexit INT

touch "$lckfl"

# yay -Syu # --noconfirm

log "Reading updateables.
"

lst="$( getfl upabl )"

while read -r i
do
    [ "$( printf "%s" "$i" | sed -E 's/^\s*//' | cut -c1 )" = "#" ] && continue

    loc="$( printf "%s" "$i" | awk -F "" '{print $1}' )"
    cmd="$( printf "%s" "$i" | awk -F "" '{print $2}' )"

    log "Parsing $loc."

    cd "$( getloc "$loc" )" || {
        log "Could not find location $loc."
        continue
    }

    log "Pulling updates."
    if [ "$( git pull | tail -n 1 | grep --color=never -o " up to date.$" )" = " up to date." ] 
    then
        log "Already up to date."
    else
        eval "$cmd" || log "Failed to update $loc."
    fi

    echo
done < "$lst"

rm "$lckfl"

log "Done."
