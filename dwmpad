#!/usr/bin/env sh

printhelp() {
    printf "%s\n" \
        "dwmpad [OPTION...] -- [COMMAND...]" \
        "   -g GEOMETRY, --geometry GEOMETRY" \
        "       Define the geometry that st should use. See st(1) for details." \
        "   -n NUMBER, --number NUMBER" \
        "       Use pad number NUMBER. Number can be an integer between 0 and 9. If 0 is passed, the given command is ignored and statistics about the other pads are shown." \
        "   -h, --help" \
        "       Print help message and exit."
}

printusage() {
    printf "Option [%s] is not valid.\n\n" "$1" >&2
    printhelp
}

logerrq() {
    printf "[ERROR]: %s\n" "$1" >&2
    exit 1
}

assertarg() {
    [ -z "$3" ] && logerrq "Expected $2 argument to $1, exiting."
}

parseargs() {
    while [ -n "$1" ]
    do
        case "$1"
        in
            -g|--geometry ) shift; assertarg "-g, --geometry" "GEOMETRY" "$1"; optgeometry="-g $1";;
            -n|--number   ) shift; assertarg "-n, --number" "NUMBER" "$1"; optnumber="$1";;
            -h|--help     ) printhelp; exit 0;;
            --            ) return 0;;
            *             ) printusage "$1"; exit 0;;
        esac

        shift
    done
}

processargs() {
    [ -n "$optnumber" ] && { [ "$( printf "%s" "$optnumber" | wc -c )" != "1" ] || [ -z "$( printf "%s" "$optnumber" | tr -dc '0-9' )" ]; } && logerrq "Invalid NUMBER passed, exiting."
}

main() {
    lckdir="$( getloc dwmpadlck )" || {
        printf "[ERROR]: getloc failed, aborting.\n"
        exit 1
    }

    lck="$( 
        printf "%s\n" "${optnumber:-"$( seq 1 9 )"}" | while IFS= read -r i
        do
            mkdir "$lckdir/$i" 2> /dev/null && {
                printf "%s" "$i"
                break
            }
        done
    )"

    [ -z "$lck" ] && {
        notify-send -t 2000 "dwmpad" "Waiting for lock acquisition..." &

        lck="$(
            while true 
            do
                i="$( inotifywait "$lckdir" -q -e "delete" --format "%f" )"
                [ -n "$optnumber" ] && [ "$i" != "$optnumber" ] && continue
                mkdir "$lckdir/$i" 2> /dev/null && {
                    printf "%s" "$i"
                    break
                }
            done
        )"
    }

    while [ -n "$1" ] && [ "$1" != "--" ]
    do
        shift
    done

    [ -n "$1" ] && shift

    st $optgeometry -n "dwmpad$lck" -t "dwmpad #$lck" -e dwmpadinit "$lckdir" "$lck" "$@"
    sleep 0.1
    rm -rf "${lckdir:?}/${lck:?}"
}

parseargs "$@"
processargs
main "$@"
