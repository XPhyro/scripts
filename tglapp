#!/usr/bin/env sh
# Toggle an application on/off (i.e. launch or kill it).
# TODO: Instead of using environmental variables, parse arguments.
# TODO: Add option to toggle applications based on a keycode. When toggling on, note the PID of the created process to a file named the keycode and when toggling off, kill the PID noted in the file named the keycode. Use it to toggle things like spt.
# TODO: Add option to force toggle applications, i.e. toggle on or toggle off. If they are already toggled on or toggled off, do nothing instead of toggling.
# TODO: Add the ability to toggle applications from a file, i.e. add the ability to read from a file toggleable things like getloc etc. and make the user select an application via dmenu, then toggle the selected application. This could be made into a more generic toggling system, using keycodes like in getloc etc. This way, key bindings in sxhkd will not be changed when an application used for a purpose changes (spt instead of spotify etc.).

if [ "$GREP" ]
then
    grp="$GREP"
else
    willgrp=1
fi

if [ "$EXEC" ]
then
    exe="$EXEC"
else
    willexe=1
fi

if [ "$KA" ]
then
    ka="$KA"
elif [ "$KC" ]
then
    kc="$KC"
else
    willka=1
fi

if [ "$willgrp" = "1" ] || [ "$willexe" = "1" ] || [ "$willka" = "1" ]
then
    if [ "$PROCESS" ]
    then
        [ "$willgrp" = "1" ] && grp="$PROCESS"
        [ "$willexe" = "1" ] && exe="$PROCESS"
        [ "$willka" = "1" ] && ka="$PROCESS"
    else
        printf "%s\n" "Not enough environment variables."
        exit 1
    fi
fi

prc="$( ps aux | grep "$grp" | grep -vE "\s+grep\s+" )"
if [ "$prc" = "" ]
then
    $exe
    exit 0
else
    if [ "$kc" ]
    then
        n="$kc"
        printf "%s\n" "$prc" | while read -r i
        do
            [ "$n" = "0" ] && break
            n=$(( n - 1 ))

            kill "$( printf "%s" "$i" | awk '{print $2}' )"
            exit 2
        done
    else
        # TODO: Make double killing into an option.
        killall "$ka"
        sleep 0.1
        killall "$ka" # some apps are problematic, hence the second killall.
        exit 1
    fi
fi
