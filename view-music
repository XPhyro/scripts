#!/usr/bin/env sh
# Find music scores in PDF format, prompt them with dmenu and open the selected one.
# TODO: After all of the documents are closed, ask whether $n was satisfactory, then save it such that it will not be asked the next time if it was satisfactory; else, ask for a new number and if given, save that instead.
# TODO: Make this into a more general helper script to open a file in a directory based on some custom filtering/sorting, and use that helper script to do what this script currently does.

cmd="xdg-open"

while [ -n "$1" ]
do
    if [ "$1" = "-c" ] || [ "$1" = "--command" ]
    then
        shift
        cmd="$1"
    fi
    shift
done

dir="$(getloc mu)" || {
    printf "[ERROR]: getloc failed, aborting.\n"
    exit 1
}
cd "$dir" || {
    notify-send "view-music" "Could not cd to $dir."
    exit 0
}

fls="$(find -mindepth 2 -regextype egrep -regex '.*/(done|in-progress|self)/.*\.pdf' -printf "%A@;%p\n" | sort -nr | sed 's|^.*;\./||')"

fl="$(printf "%s" "$fls" | dmenu -i -l 20 -p "Select sheet music:")"
[ -z "$fl" ] && exit 0

n="$(seq 4 | dmenu -F -p "How many to open:")"
[ -z "$n" ] && exit 0
while printf "%s" "$n" | grep -q "[^[:digit:]]"
do
    n="$(seq 4 | dmenu -F -p "You must enter a positive integer:")"
    [ -z "$n" ] && exit 0
done

notify-send -t 2000 "view-music" "Opening $n of $(basename "$fl") with $cmd."
seq "$n" | while read -r _
do
    eval "'$cmd' '$fl'" &
done
wait
