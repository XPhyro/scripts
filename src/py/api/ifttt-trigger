#!/usr/bin/env python3


import os
import sys

import requests


REQUEST_TIMEOUT = 20


def read_var(var_name, default=None) -> str:
    try:
        with open(
            (os.environ.get("XDG_CONFIG_HOME") or os.path.expanduser("~/.config"))
            + "/scripts/ifttt-trigger/"
            + var_name,
            encoding="utf-8",
        ) as var_file:
            var = "".join(var_file.readlines())
            var.strip()
            return var
    except FileNotFoundError:
        if default is not None:
            return default
        raise


def main() -> int:
    trigger = os.environ.get("IFTTT_TRIGGER") or read_var(
        "trigger", default="push_notification"
    )
    key = os.environ.get("IFTTT_KEY") or read_var("key")

    params = {"value1": sys.argv[1]}
    if len(sys.argv) >= 3:
        params["value2"] = sys.argv[2]
        if len(sys.argv) >= 4:
            params["value3"] = sys.argv[3]

    ret = requests.post(
        f"https://maker.ifttt.com/trigger/{trigger}/with/key/{key}",
        params=params,
        timeout=REQUEST_TIMEOUT,
    )
    print(ret.text)

    return ret.status_code != 200


if __name__ == "__main__":
    sys.exit(main())
