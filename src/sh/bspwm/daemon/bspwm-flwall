#!/usr/bin/env sh
eval "$(evalverbose)"

rootdir="/tmp/${0##*/}"
xpropdir="$rootdir/xprop"
mkdir -p -- "$xpropdir"
[ ! -d "$xpropdir" ] && exit 1
xpropdir="$rootdir/xprop"
mkdir -p -- "$xpropdir"
[ ! -d "$xpropdir" ] && exit 1
bspcdir="$rootdir/bspc"
mkdir -p -- "$bspcdir"
[ ! -d "$bspcdir" ] && exit 1

rules="$(bspc rule -l)"
nofocus="$(
    printf "%s\n" "$rules" | grep -F " focus=false"
    printf "%s\n" "$rules" | grep -F " follow=false"
)"
nofocusclasses="$(printf "%s\n" "$nofocus" | cut -d: -f1)"
nofocusinstances="$(printf "%s\n" "$nofocus" | cut -d: -f2)"
nofocusnames="$(printf "%s\n" "$nofocus" | cut -d: -f3- | sed 's/ => .*$//')"

{   bspc subscribe node_swap node_transfer &
    bspc subscribe node_remove | while IFS=" " read -r _ _ _ i; do
        [ "$(jq .client.state < "$bspcdir/$i")" = '"floating"' ] \
            && grep -Fq "window gravity: Static" < "$xpropdir/$i" \
            && continue

        eval "$(xprop -id "$i" 0s '\n$0\n$1\n' WM_CLASS 0s '\n$0\n' WM_NAME \
                    | sed -n -e 's/'\''/'\'\"\'\"\''/g' \
                             -e 's/^"\(.*\)"$/'\''\1'\''/' \
                             -e '2s/^/CLASS=/' \
                             -e '3s/^/INSTANCE=/' \
                             -e '5s/^/NAME=/' \
                             -e '2,3p' \
                             -e '5,$p'
        )"

        printf "%s\n" "$nofocusclasses" | grep -Fxq "$CLASS" \
            || printf "%s\n" "$nofocusinstances" | grep -Fxq "$INSTANCE" \
            || printf "%s\n" "$nofocusnames" | grep -Fxq "$NAME" \
            && continue

        printf "FOLLOW_REMOVE\n"
    done &
    bspc subscribe node_flag | grep --line-buffered -F "hidden off" &
    bspc subscribe node_state \
        | xargs -d "\n" -n 2 printf "%s %s\n" \
        | grep --line-buffered -vE "^node_state .* fullscreen (on|off)" \
        | while IFS=" " read -r _ _ _ _ i _; do
            eval "$(xprop -id "$i" 0s '\n$0\n$1\n' WM_CLASS 0s '\n$0\n' WM_NAME \
                        | sed -n -e 's/'\''/'\'\"\'\"\''/g' \
                                 -e 's/^"\(.*\)"$/'\''\1'\''/' \
                                 -e '2s/^/CLASS=/' \
                                 -e '3s/^/INSTANCE=/' \
                                 -e '5s/^/NAME=/' \
                                 -e '2,3p' \
                                 -e '5,$p'
            )"

            printf "%s\n" "$nofocusclasses" | grep -Fxq "$CLASS" \
                || printf "%s\n" "$nofocusinstances" | grep -Fxq "$INSTANCE" \
                || printf "%s\n" "$nofocusnames" | grep -Fxq "$NAME" \
                && continue
            printf "FOLLOW_STATE\n"
        done &
    bspc subscribe node_add | while IFS=" " read -r _ _ _ _ i; do
        xprop -id "$i" > "$xpropdir/$i"
        bspc query -T -n "$i" > "$bspcdir/$i"
        [ "$(bspc query -D -d .focused)" = "$(bspc query -D -n "$i")" ] || continue

        eval "$(xprop -id "$i" 0s '\n$0\n$1\n' WM_CLASS 0s '\n$0\n' WM_NAME \
                    | sed -n -e 's/'\''/'\'\"\'\"\''/g' \
                             -e 's/^"\(.*\)"$/'\''\1'\''/' \
                             -e '2s/^/CLASS=/' \
                             -e '3s/^/INSTANCE=/' \
                             -e '5s/^/NAME=/' \
                             -e '2,3p' \
                             -e '5,$p'
        )"

        if [ "$(jq .client.state < "$bspcdir/$i")" = '"floating"' ] \
        && grep -Fq "window gravity: Static" < "$xpropdir/$i"; then
            bspc node -f "$i"
        elif printf "%s\n" "$nofocusclasses" | grep -Fxq "$CLASS" \
        || printf "%s\n" "$nofocusinstances" | grep -Fxq "$INSTANCE" \
        || printf "%s\n" "$nofocusnames" | grep -Fxq "$NAME"; then
            bspc query -N -n .focused
            continue
        fi

        printf "FOLLOW_ADD\n"
    done
} | while IFS= read -r _; do
    [ -e "$XDG_CACHE_HOME/bspwm/.follows.lck" ] \
        || ! wg="$(xdotool getactivewindow getwindowgeometry)" \
        && continue
    dim="$(printf "%s\n" "$wg" | tail -n 1 | awk "{print \$NF}")"
    xdotool mousemove \
        -w "$(printf "%s\n" "$wg" | head -n 1 | awk "{print \$NF}")" \
        "$((${dim%x*} / 2))" \
        "$((${dim#*x} / 2))"
done
