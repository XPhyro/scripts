#!/usr/bin/env sh

eval "$(evalverbose)"

execname="${0##*/}"

logerr() {
    printf "%s: %s\n" "$execname" "$1" >&2
}

logerrq() {
    logerr "$@"
    exit 1
}

validate() {
    contains "$1" "
" "" && logerrq "keycode cannot contain \n or \r: $1"
    contains "$2" "
" "" && logerrq "value cannot contain \n or \r: $2"
    grep -m 1 -F -- "$1" "$dbfl" > /dev/null && logerrq "duplicate keycode: $1"
}

optmod="p"
unset dbfl optreal
while getopts "acdfhPpRr" OPT; do
    case "$OPT" in
        d) dbfl="${XDG_CONFIG_HOME:-"$HOME/.config"}/scripts/pathfinding/directories";;
        f) dbfl="${XDG_CONFIG_HOME:-"$HOME/.config"}/scripts/pathfinding/files";;
        h)
            printf "%s" \
"Usage: $execname [OPTION]... [[KEYCODE] [PATH]]...
Usage: $execname -R [OPTION]... [PATH]...
Usage: $execname -r [OPTION]... [KEYCODE]...
Edit the pathfinding database.

By default, mode -p is selected. Either -d or -f must be passed.

  -a        select append mode, override -cpRr
  -c        select edit mode, override -apRr
  -d        edit directory database, override -f
  -f        edit file database, override -d
  -h        display this help and exit
  -P        pass PATHs through \`realpath -mP\`
  -p        select prepend mode, override -acRr
  -R        select path remove mode, override -acpr
  -r        select keycode remove mode, override -acpR
"
            exit 0
            ;;
        P) optreal=1;;
        \?) logerrq "see \`$execname -h\`";;
        *) optmod="$OPT";;
    esac
done
shift "$((OPTIND - 1))"

[ -z "$dbfl" ] && logerrq "either -d or -f must be passed, see \`$execname -h\`"
[ "$optmod" != "r" ] && [ "$optmod" != "R" ] && [ "$(($# % 2))" -ne 0 ] && logerrq "every KEYCODE must be paired with a PATH"

case "$optmod" in
    a)
        edit() {
            [ "$optreal" = 1 ] && set -- "$1" "$(realpath -mPq -- "$2")"
            validate "$1" "$2"
            printf "%s\r%s\n" "$1" "$2" >> "$dbfl"
            return 2
        }
        ;;
    c)
        edit() {
            gawk -i inplace -F '\r' -v KC="$1" -v PATH="$2" -- '{
                if ($1 == KC)
                    printf("%s\r%s\n", KC, PATH);
                else
                    print($0);
            }' "$dbfl"
            return 2
        }
        ;;
    p)
        edit() {
            [ "$optreal" = 1 ] && set -- "$1" "$(realpath -mPq -- "$2")"
            validate "$1" "$2"
            {
                printf "%s\r%s\n" "$1" "$2"
                cat -- "$dbfl"
            } | sponge -- "$dbfl"
            return 2
        }
        ;;
    R)
        edit() {
            grep -vF -- "$1" "$dbfl" | sponge -- "$dbfl"
            return 1
        }
        ;;
    r)
        edit() {
            grep -vF -- "$1" "$dbfl" | sponge -- "$dbfl"
            return 1
        }
        ;;
esac

chmod -- 600 "$dbfl"
while [ "$#" -gt 0 ]; do
    edit "$@"
    shift "$?"
done
chmod -- 400 "$dbfl"

genpath
