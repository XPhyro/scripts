#!/usr/bin/env sh
# kdialog wrapper to not use awful file dialogs.
#
# If you're using dwm, bspwm or other generic graphical environments,
# you should 'export XDG_CURRENT_DESKTOP=kde' in your shell profile
# and prepend 'unset XDG_CURRENT_DESKTOP' in xdg-open (unless you're
# using the included xdg-open wrapper).
#
# If you're using KDE, you do not need to change anything.
#
# If you're not using KDE or a generic environment,
# you need to either change your default file picker,
# or transform this script to fit your file picker.

. evalverbose.sh

realkdialog() {
    execaux "$0" "$@"
}

execrealkdialog() {
    exec execaux "$0" "$@"
}

peekargs() {
    hasrelevantopt=0
    for i; do
        case "$i" in
            --getopenfilename|--getsavefilename|--getopenurl|--getsaveurl)
                hasrelevantopt=1;;
            -h|--help|--help-all|-v|--version|--author|--license)
                execrealkdialog "$@";;
        esac
    done

    [ $hasrelevantopt -eq 0 ] && execrealkdialog "$@"
}

parseargs() {
    unset argopen argopenfilter argsave argsavefilter optmultiple argtitle

    while [ -n "$1" ]; do
        if [ "${1%"${1#??}"}" = "--" ]; then
            opt="${1#??}"

            case "$opt" in
                getopenfilename|getopenurl)
                    [ "$#" -gt 1 ] && shift && argopen="$1"
                    [ "$#" -gt 1 ] && [ "${2%"${2#??}"}" != "--" ] && shift && argopenfilter="$1"
                    ;;
                getsavefilename|getsaveurl)
                    [ "$#" -gt 1 ] && shift && argsave="$1"
                    [ "$#" -gt 1 ] && [ "${2%"${2#??}"}" != "--" ] && shift && argsavefilter="$1"
                    ;;
                multiple)
                    optmultiple="Multiple Allowed"
                    ;;
                title)
                    shift; argtitle="$1 | "
                    ;;
            esac
        fi

        shift
    done
}

main() {
    lfshare="${XDG_DATA_HOME:="$HOME/.local/share"}/lf"
    lffiles="$lfshare/files"

    if [ -n "$argsave" ]; then
        if [ -d "$argsave" ]; then
            dir="$argsave"
            fl="NULL"
        else
            dir="$(dirname -- "$argsave")"
            fl="$(basename -- "$argsave")"
        fi

        dir="$(realpath -s -- "$dir")"

        tmplffiles="$(mktemp)"
        cp -f -- "$lffiles" "$tmplffiles"
        truncate -c -s 5 -- "$lffiles"
        savefl="$(getnewpath "$dir/$fl")"
        printf "%s\n" "$savefl" >> "$lffiles"
        lf -remote 'send sync'

        touch -- "$savefl"

        "${PAD:-bspwmpad}" -g 1450x900 -t "${argtitle}Save File [$argsavefilter] [Single Only]" -- lfrun -- "$dir" &

        sleep 0.3
        lfid="$(pgrep lf | sort -n | tail -n 1)"
        lf -remote "send $lfid select '$dir/$fl'" > /dev/null 2>&1

        wait

        selfl="$(tail -n +2 -- "$lffiles" | head -n 1)"
        printf "%s\n" "$selfl"

        printf "%s\n" "$selfl" | grep -Fxq "$savefl" || rm -f -- "$savefl"

        mv -f -- "$tmplffiles" "$lffiles"
        lf -remote 'send sync'
    elif [ -n "$argopen" ]; then
        if [ -d "$argopen" ]; then
            dir="$argopen"
        else
            dir="$(dirname -- "$argopen")"
        fi

        tmplffiles="$(mktemp)"
        cp -f -- "$lffiles" "$tmplffiles"
        truncate -c -s 5 -- "$lffiles"
        lf -remote 'send sync'

        "${PAD:-bspwmpad}" -g 1450x900 -t "${argtitle}Open File [$argopenfilter] [${optmultiple:-"Single Only"}]" -- lfrun -- "$dir"

        if [ -n "$optmultiple" ]; then
            tail -n +2 -- "$lffiles"
        else
            tail -n +2 -- "$lffiles" | head -n 1
        fi

        mv -f -- "$tmplffiles" "$lffiles"
        lf -remote 'send sync'
    else
        execrealkdialog "$@"
    fi
}

peekargs "$@"
realkdialog --help --version "$@" > /dev/null || exit $?
parseargs "$@" > /dev/null 2>&1
processargs > /dev/null 2>&1
main "$@"
