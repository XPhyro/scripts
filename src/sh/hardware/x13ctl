#!/usr/bin/env sh

logerrq() {
    printf "%s\n" "$@" >&2
    exit 1
}

eval "$(getpath -dse -- x13ctl cachedir 1 "$0: \`getpath -ds x13ctl\` failed")"
# shellcheck disable=SC2154
batlimfl="$cachedir/batterylimit"
proffl="$cachedir/perfprofile"
kbfl="$cachedir/keyboardbrightness"

while getopts "c:hk:p:" OPT; do
    case "$OPT" in
        c)
            case "$OPTARG" in
                sync) asusctl -c "$(cat -- "$batlimfl")";;
                get) cat -- "$batlimfl";;
                get-polybar) printf "%s %s%%\n" "‚ôª" "$(cat -- "$batlimfl")";;
                *)
                    [ "$OPTARG" = "next" ] \
                        && OPTARG="$(DEF=100 fmaps $X13CTL_BATTERY_NEXT_FMAPS < "$batlimfl")"
                    [ "$OPTARG" -ge 20 ] && [ "$OPTARG" -le 100 ] \
                        || logerrq "invalid charging limit"
                    asusctl -c "$OPTARG"
                    printf "%s" "$OPTARG" > "$batlimfl"
                    polybar-msg action '#batterylimit.hook.0'
                    ;;
            esac
            ;;
        h)
            printf "%s" \
"$0 [OPTION...]
   -c LIMIT     get or set charging limit. accepted LIMITs are {sync, get, get-polybar, next, {20..100}}.
   -h           display help dialog and exit
   -k LEVEL     get or set keyboard light brightness. accepted LEVELs are {sync, get, get-polybar, next, {0, 48, o, {O, o}ff}, {1, 49, l, {L, l}ow}, {2, 50, m, {M, m}ed, {M, m}edium}, {3, 51, h, {H, h}igh}}.
   -p PROFILE   get or set performance profile. accepted PROFILEs are {sync, get, get-polybar, next, {I, |, 0, q, {Q, q}uiet}, {II, ||, 1, b, {B, b}alanced}, {III, |||, 2, p, {P, p}erformance}}.
"
            exit 0
            ;;
        k)
            case "$OPTARG" in
                sync) printf "%s" "$(asusctl -k | cut -d' ' -f5 | fmaps 48=Off 49=Low 50=Med 51=High)" > "$kbfl";;
                get) cat -- "$kbfl";;
                get-polybar) printf "%s %s\n" "üö¶" "$(cat -- "$kbfl")";;
                *)
                    if [ "$OPTARG" = "next" ]; then
                        OPTARG="$(DEF=Low fmaps Low=Med Med=High High=Off < "$kbfl")"
                    else
                        OPTARG="$(printf "%s" "$OPTARG" | fmaps \
                            48=0 o=0 Off=0  off=0 \
                            49=1 l=1 Low=1  low=1 \
                            50=2 m=2 Med=2  med=2 \
                            51=3 h=3 High=3 high=3 \
                            | DEF=invalid fmaps 0=Off 1=Low 2=Med 3=High)"
                    fi
                    [ "$OPTARG" = "invalid" ] && logerrq "invalid brightness level"
                    asusctl -k "$OPTARG"
                    printf "%s" "$OPTARG" > "$kbfl"
                    polybar-msg action '#keyboardlight.hook.0'
                    ;;
            esac
            ;;
        p)
            case "$OPTARG" in
                sync) printf "%s" "$(asusctl profile -p | cut -d' ' -f4)" > "$proffl";;
                get) cat -- "$proffl";;
                get-polybar) printf "%s %s\n" "üçÄ" "$(cat -- "$proffl")";;
                *)
                    if [ "$OPTARG" = "next" ]; then
                        OPTARG="$(DEF=Quiet fmaps Quiet=Balanced Balanced=Performance < "$proffl")"
                    else
                        OPTARG="$(printf "%s" "$OPTARG" | fmaps \
                            I=0 '|'=0 q=0 quiet=0 \
                            II=1 '||'=1 b=1 balanced=1 \
                            III=2 '|||'=2 p=2 performance=2 \
                            | DEF=invalid fmaps 0=Quiet 1=Balanced 2=Performance)"
                    fi
                    [ "$OPTARG" = "invalid" ] && logerrq "invalid performance profile"
                    asusctl profile -P "$OPTARG"
                    printf "%s" "$OPTARG" > "$proffl"
                    polybar-msg action '#perfprofile.hook.0'
                    ;;
            esac
            ;;
        *) logerrq "invalid option given: $OPT";;
    esac
done
shift "$((OPTIND - 1))"
