#!/usr/bin/env sh
# Use speedtest to test internet connection and log the results.
# speedtestlogp can be used to print the logs.

. std.sh

ping -c 1 speedtest.net > /dev/null 2>&1 || {
    printf "%s\n" "Cannot reach speedtest.net servers, exiting."
    exit 1
}

printf "%s" "Testing..."

! result="$(speedtest)" || [ -z "$result" ] && {
    printf "\n%s\n" "Test failed, exiting."
    exit 1
}

timestamp="$(date +%s)"
isp="$(     printf "%s\n" "$result" | grep -F "Testing from" | sed -e 's/Testing from //' -e 's/\.\.\.//')"
host="$(    printf "%s\n" "$result" | grep -F "Hosted by"    | sed -e 's/Hosted by //' -e 's/:.*//')"
latency="$( printf "%s\n" "$result" | grep -F "Hosted by"    | awk '{print $(NF - 1)" "$NF}')"
download="$(printf "%s\n" "$result" | grep -F "Download:"    | awk '{print $2" "$3}')"
upload="$(  printf "%s\n" "$result" | grep -F "Upload:"      | awk '{print $2" "$3}')"

printf "\n\n"
printf "%s\n" \
    "Timestamp: $timestamp" \
    "ISP: $isp" \
    "Host: $host" \
    "Latency: $latency" \
    "Download: $download" \
    "Upload: $upload"

printf "\nLogging results..."

eval "$(getpath -fe -- stl fl 1 "[ERROR]: getpath -f -- failed, aborting.")"

tmp="$(mktemp)"
trap 'rm -f "$tmp"' EXIT INT QUIT TERM HUP

# shellcheck disable=SC2154
printf "%s\n" "$timestamp;$isp;$host;$latency;$download;$upload" >> "$fl"

printf "\nDone.\n"
