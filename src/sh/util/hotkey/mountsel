#!/usr/bin/env sh
# Gives a dmenu prompt to automatically mount drives.

. std.sh

. execinfo.sh
. sudo.sh

send_notification() {
    std_sudo_env notify-send "$@"
}

assertroot || exit 1

[ "$(lsusb | grep -Ec "iPhone|iPad")" -gt 1 ] && {
    printf "%s\n" "Cannot handle combinations of or multiple iPhones or iPads at the same time." \
        | execmenu -i -p "ERROR"
    exit 1
}

chosen="$(
    {   mountpoint -q -- /mnt/iPhone || lsusb | grep -Fo "iPhone" | head -n 1
        mountpoint -q -- /mnt/iPhone || lsusb | grep -Fo "iPad" | head -n 1
        lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}'
    } | execmenu -i -p "Drive to mount:" | cut -d' ' -f1
)"

[ -z "$chosen" ] && exit 1

if [ "$chosen" = "iPhone" ]; then
    until idevicepair pair; do
        sleep 5
    done
    mkdir -p -- /mnt/iPhone
    if ifuse -o allow_other,default_permissions /mnt/iPhone; then
        # shellcheck disable=SC2154
        send_notification "$std_execname" "Successfully mounted iPhone to /mnt/iPhone."
    else
        send_notification "$std_execname" "Failed to mount iPhone."
    fi
elif [ "$chosen" = "iPad" ]; then
    until idevicepair pair; do
        sleep 5
    done
    mkdir -p -- /mnt/iPad
    if ifuse -o allow_other,default_permissions /mnt/iPad; then
        send_notification "$std_execname" "Successfully mounted iPad to /mnt/iPad."
    else
        send_notification "$std_execname" "Failed to mount iPad."
    fi
else
    mount "$chosen" 2>/dev/null && {
        send_notification "$std_execname" "$chosen is already mounted."
        exit 0
    }

    label="$(
        lsblk -rpo "name,label" \
        | grep -F "$chosen " \
        | cut -d' ' -f2- \
        | xargs -r -n 1 -d '\n' printf -- \
        | awk '{print(tolower($0))}' \
        | tr -d '[:blank:]/'
    )"

    mp="/mnt/${label:-"${chosen##*/}"}"

    [ -z "$mp" ] && exit 1
    [ -d "$mp" ] || mkdir -p -- "$mp"

    if mount -o gid=users,fmask=113,dmask=002 -- "$chosen" "$mp"; then
        send_notification "$std_execname" "Successfully mounted $chosen to $mp."
        chown :wheel -- "$mp"
        chmod 770 -- "$mp"
    elif mount -- "$chosen" "$mp"; then
        send_notification "$std_execname" "Successfully mounted $chosen to $mp."
        chown :wheel -- "$mp"
        chmod 770 -- "$mp"
    else
        send_notification "$std_execname" "Failed to mount $chosen."
    fi
fi
