#!/usr/bin/env sh

[ -z "$VPN" ] && {
    fls="$(
        printf "%s\n" "$PATH" \
            | tr ':' '\n' \
            | xargs -P 12 -I PATH find PATH -mindepth 1 -maxdepth 1 -type f -executable 2> /dev/null
    )"
    possiblevpns="$(
        {   # TODO: Write a wrapper script for the following multi-grepping.
            printf "%s\n" "$fls" | grep -oi '[^/-]*vpn$' | sort
            printf "%s\n" "$fls" | grep -oi '[^/]*vpn$' | sort
            printf "%s\n" "$fls" | grep -oi '[^/]*vpn[^/]*$' | sort
        } | grep -vFx "${0##*/}" \
            | grep -vEx "(openvpn|statbarvpn|dwmbar-vpn|advpng|pcf2vpnc|vpnc|vpnc-disconnect)" \
            | uniqs \
            | awk 'BEGIN {i = 0} {i += 1; print "  "i" "$0}'
    )"

    if [ -z "$possiblevpns" ]; then
        printf "Could not find any VPNs. Enter the name of the command: "
        VPN="$(readstr)" && [ -n "$VPN" ] || exit 1
    else
        printf "%s\n" "Select the VPN command:" "  0 Enter manually" "$possiblevpns"
        selc="$(printf "%s\n" "$possiblevpns" | wc -l)"
        sel="$(
            if [ "$selc" -lt 10 ]; then
                readchar
            else
                readstr
            fi
        )"

        [ -n "$(printf "%s\n" "$sel" | tr -d '[:digit:]')" ] && {
            printf "You must enter the number before the command.\n\n"
            exec "$0" "$@"
        }

        if [ "$sel" -eq 0 ]; then
            printf "Enter the name of the command: "
            VPN="$(readstr)" && [ -n "$VPN" ] || exit 1
        elif [ "$sel" -lt "$((selc + 1))" ]; then
            VPN="$(
                printf "%s\n" "$possiblevpns" \
                    | torso "$sel" "$sel" \
                    | tail -c +"$((${#sel} + 4))"
            )"
        else
            printf "You entered an invalid number.\n\n"
            exec "$0" "$@"
        fi
    fi
}

printf "\nSelected VPN: %s\n" "$VPN"
{ timeout 2 "$VPN" --help || timeout 2 "$VPN" --version; } > /dev/null || exit 1

if pgrep -u root openvpn > /dev/null 2>&1; then
    timeout 5 "$VPN" status
else
    printf "IP Address: %s\n" "$(timeout 5 curl ipinfo.io/ip 2> /dev/null)"
fi

flushterm

while true; do
    printf "\n"

    case "$(readchar)" in
        c) printf "Enter country code: "; "$VPN" c --cc "$(readstr)";;
        d) "$VPN" disconnect;;
        f) "$VPN" connect --fastest;;
        i) "$VPN" connect;;
        r) "$VPN" reconnect;;
        s) "$VPN" status;;
        q) exit 0;;
        *) printf "%s" \
"c) connect to specific country
d) disconnect
f) connect to fastest
r) reconnect
i) connect interactively
s) status
q) quit
*) print this
";;
    esac
done
