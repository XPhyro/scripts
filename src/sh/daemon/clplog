#!/usr/bin/env sh
# Log clipped text as a daemon (though it does not fork out). clplogynk be used to list and copy these with rofi.
# This script and clplogynk assume that the copied string does not contain the character .
# TODO: Only log if the string is not a special file when invoked with 'file' (after being dumped into a file), or check for non-printable characters and do not log if it has non-printable characters.

logfl="$(readlink -m -- "$(getfl clplog)")"
bakdir="$(readlink -m -- "$(getdir clplogbak)")"
lckdir="$(getdirunsafe clploglck)" || {
    printf "[ERROR]: getfl failed, aborting.\n"
    exit 1
}
lastclp="$(xclip -o -se c)"
oldclp="$lastclp"

[ -d "$lckdir" ] && rm -rf -- "$lckdir"

while true; do
    while clipnotify; do
        [ -d "$lckdir" ] && {
            rm -rf -- "$lckdir"
            continue
        }

        clp="$(xclip -o -se c)"
        [ "$(printf "%s" "$clp" | sed '/^\s*$/d')" = "" ] && continue
        [ "$clp" != "$lastclp" ] && [ "$clp" != "$oldclp" ] && {
            printf ": %s;\n### BEGIN CLIP ###\n%s\n### END CLIP ###\n" "$(date +%s)" "$(printf "%s\n" "$clp" | tr '\n' '')" >> "$logfl"
            lastclp="$clp"
            oldclp=""

            [ "$(du -b -- "$logfl" | cut -f1)" -gt "5242879" ] && {
                lastnum="$(find "$bakdir" -mindepth 1 -printf "%P\n" | sort -n | tail -n 1)"
                [ -z "$lastnum" ] && lastnum="-1"
                mv -- "$logfl" "$bakdir/$((lastnum + 1))"
                touch "$logfl"
            }
        }
    done
done
