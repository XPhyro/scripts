#!/usr/bin/env sh
# Edit given links.

clean() {
    rm -f -- "$tmpfl" "$origtmpfl" 2> /dev/null
}

trap clean INT EXIT TERM

tmpfl="$(mktemp)"

if [ -t 0 ]; then
    for i; do
        if [ -L "$i" ]; then
            dest="$(readlink -- "$i")"
        elif [ -d "$i" ]; then
            dest="DIRECTORY"
        elif [ -e "$i" ]; then
            dest="REGULAR FILE"
        else
            dest="NO FILE"
        fi

        printf "%s%s\n" "$i" "$dest" >> "$tmpfl"
    done
else
    while IFS= read -r i; do
        if [ -L "$i" ]; then
            dest="$(readlink -- "$i")"
        elif [ -d "$i" ]; then
            dest="DIRECTORY"
        elif [ -e "$i" ]; then
            dest="REGULAR FILE"
        else
            dest="NO FILE"
        fi

        printf "%s%s\n" "$i" "$dest" >> "$tmpfl"
    done <&0
fi

origtmpfl="$(mktemp)"
cp -f -- "$tmpfl" "$origtmpfl"

eval "'$EDITOR' -- '$tmpfl'"

cmp -s -- "$origtmpfl" "$tmpfl" && exit 0

while IFS='' read -r fl symlink <&3 && IFS='' read -r ogfl ogsymlink <&4; do
    if [ "$fl" != "$ogfl" ] || [ -z "$symlink" ] || [ "$symlink" = "DIRECTORY" ] || [ "$symlink" = "REGULAR FILE" ] || [ "$symlink" = "NO FILE" ] || [ "$symlink" = "$ogsymlink" ]; then
        printf "Ignoring line [%s%s].\n" "$fl" "$symlink"
        continue
    fi

    if [ -L "$fl" ]; then
        rm -f "$fl"
    elif [ -d "$fl" ]; then
        [ -e "$symlink" ] || {
            printf "Refusing to overwrite directory [%s] as the destination [%s] does not exist.\n" "$fl" "$symlink"
            continue
        }

        printf "Overwriting directory [%s] with a symlink to [%s].\n" "$fl" "$symlink"
        rm -rf -- "$fl"
    elif [ -e "$fl" ]; then
        [ -e "$symlink" ] || {
            printf "Refusing to overwrite file [%s] as the destination [%s] does not exist.\n" "$fl" "$symlink"
            continue
        }

        printf "Overwriting file [%s] with a symlink to [%s].\n" "$fl" "$symlink"
        rm -f -- "$fl"
    fi

    ln -sf -- "$symlink" "$fl"
done 3< "$tmpfl" 4< "$origtmpfl"
