#!/usr/bin/env sh
# Scrape a set of instagram accounts, generate a list of all media files and make git ignore all media files.

cleanexit() {
    [ "$newfollow1" ] && [ -f "$newfollow1" ] && rm "$newfollow1"
    [ "$newfollow2" ] && [ -f "$newfollow2" ] && rm "$newfollow2"
    exit 0
}

cdsafe() {
    cd "$1" || {
        echo "Could not cd to $1, exiting."
        exit
    }
}

scrape() {
    while ! instagram-scraper "@$1" -f "$2" -T '{username}_{year}-{month}-{day}_{h}-{m}-{s}_{urlname}_{shortcode}' --profile-metadata --media-metadata --latest --retry-forever
    do
        sleep 1m
    done
}

genlst() {
    olddir="$( pwd )"
    cdsafe "$basedir"

    igdirs="$( find . -mindepth 1 -maxdepth 1 -type d -printf '%P\n' )"
    printf "%s" "$igdirs" | while read -r i
    do
        find "$i" -printf "%f\n" | grep -E ".*(jpg|mp4|part)" | sort -n > "$i/ig.list"
    done

    cdsafe "$olddir"
}

trap cleanexit INT

basedir="$( getloc igg )"
cdsafe "$basedir"

newfollow1="$( dupe follow )"
sed -r -e '/^#/d' -e '/^$/d' -e 's/\s+.*$//' -i "$newfollow1"

# TODO: Make this option parsing into a more robust thing
if [ "$1" = "-r" ]
then
    sort -r -o "$newfollow1" "$newfollow1"
elif ! [ "$1" = "-n" ]
then
    sort -o "$newfollow1" "$newfollow1"
fi

for i in "$@"
do
    [ "$i" = "-l" ] && {
        genlst
        cleanexit
    }
done

newfollow2="$( dupe "$newfollow1" )"

LC_ALL=C sed -i '/^[v-zV-Z].*/d' "$newfollow1"
LC_ALL=C sed -i '/^[a-uA-U].*/d' "$newfollow2"

scrape args "$newfollow1"
scrape args_ "$newfollow2"

rdfind -minsize 100 -removeindentinode false -makehardlinks false -makesymlinks true -deleteduplicates true -outputname "$( mktemp )" -dryrun false
genlst

cdsafe "$basedir/.."
cat .gitignore.def > .gitignore
echo >> .gitignore
find . -type l -printf '!%P\n' >> .gitignore

cleanexit
